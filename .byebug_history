exit
handle_aces(cards_value).sum
handle_aces(cards_value)
exit
step
e
defensive_move
temp
step
tem
step
e
step
temp
step
temp
step
continue
next
arr
next
arr
next
arr
next
arr
next
e
arr
next
exit
arr
step
e
step
ste
step
defensive_move
step
e
step
e
next
e
defensive_move
step
e.class
e
step
arr
step
arr
continue
next
arr
next
arr
next
continue
next
continue
arr
next
step
arr
exit
defensive_move
temp
step
temp
step
e
step
temp
e
step
e
step
e
defensive_move
step
temp
step
e
step
arr
step
continue
defensive_move
next
arr
next
continue
finish
continue
exit
step
defensive_move
next
arr
next
arr
next
arr
next
arr
next
arr
continue
next
nex
square
next
defensive_move
next
arr
next
arr
next
arr
next
arr
next
arr
ar
next
arr
next
defensive_move
arr
next
arr
exit
defensive_move
next
continue
exit
arr
defensive_move
next
continue
next
empty_squares(brd)
empty_squares
empty_squares[brd]
brd[square]
brd
next
defensive_move
next
exit
!!nil
!nil
nil
WINNING_LINES
line
next
brd[line[2]]
next
brd[line[2]]
brd[line[1]]
brd[line[0]]
next
line
finish
continue
exit
continue
next
brd[line[0]]
line
